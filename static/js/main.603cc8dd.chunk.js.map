{"version":3,"sources":["components/Clock.js","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","tick","setInterval","setState","console","log","this","clearInterval","name","props","className","React","Component","App","isClockVisible","toggleVisibility","changeName","prevState","newName","randomize","Math","floor","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,KAAOC,aACL,WACE,EAAKC,SAAS,CACZL,MAAO,IAAIC,MAAQC,uBAGrBI,QAAQC,KAAI,IAAIN,MAAOC,wBACtB,KAZP,kEAgBI,OAAOM,KAAKL,OAhBhB,6CAoBIM,cAAcD,KAAKL,QApBvB,+BAuBY,IACAO,EAASF,KAAKG,MAAdD,KACAV,EAASQ,KAAKT,MAAdC,KAER,OACE,yBAAKY,UAAU,SACb,6CACaF,IAEb,2BACGV,QAjCX,GAA2Ba,IAAMC,YC2DlBC,E,4MAxDbhB,MAAQ,CACNiB,gBAAgB,EAChBN,KAAM,G,EAGRO,iBAAmB,WACjB,EAAKZ,UAAS,SAAAN,GAAK,MAAK,CACtBiB,gBAAiBjB,EAAMiB,oB,EAI3BE,WAAa,kBACX,EAAKb,UAAS,SAACc,GACb,IAAMC,EAAU,EAAKC,YAOrB,OAJAf,QAAQC,IAAR,sBACiBY,EAAUT,KAD3B,eACsCU,IAG/B,CACLV,KAAMU,O,EAKZC,UAAY,kBAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,W,uDAExB,IAAD,EAC0BhB,KAAKT,MAA9BiB,EADD,EACCA,eAAgBN,EADjB,EACiBA,KAExB,OACE,yBAAKE,UAAU,OACZI,EACG,kBAAC,EAAD,CAAON,KAAMA,IACb,8BAEJ,4BACEE,UAAU,cACVa,KAAK,SACLC,QAASlB,KAAKS,kBAEbD,EAAiB,OAAS,QAE7B,4BACEJ,UAAU,cACVa,KAAK,SACLC,QAASlB,KAAKU,YAHhB,oB,GA7CUL,IAAMC,WCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.603cc8dd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  tick = setInterval(\n    () => {\n      this.setState({\n        time: (new Date()).toLocaleTimeString(),\n      });\n      // eslint-disable-next-line no-console\n      console.log(new Date().toLocaleTimeString());\n    }, 1000,\n  );\n\n  componentDidMount() {\n    return this.tick;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.tick);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <h1>\n          {`Clock #${name}`}\n        </h1>\n        <p>\n          {time}\n        </p>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: 0,\n  };\n\n  toggleVisibility = () => {\n    this.setState(state => ({\n      isClockVisible: !state.isClockVisible,\n    }));\n  };\n\n  changeName = () => (\n    this.setState((prevState) => {\n      const newName = this.randomize();\n\n      // eslint-disable-next-line no-console\n      console.log(\n        `Rename from ${prevState.name} to ${newName}`,\n      );\n\n      return {\n        name: newName,\n      };\n    })\n  );\n\n  randomize = () => Math.floor(Math.random() * 100);\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    return (\n      <div className=\"app\">\n        {isClockVisible\n          ? <Clock name={name} />\n          : <div />\n        }\n        <button\n          className=\"app__button\"\n          type=\"button\"\n          onClick={this.toggleVisibility}\n        >\n          {isClockVisible ? 'Hide' : 'Show'}\n        </button>\n        <button\n          className=\"app__button\"\n          type=\"button\"\n          onClick={this.changeName}\n        >\n          Change name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}