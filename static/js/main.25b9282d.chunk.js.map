{"version":3,"sources":["components/Clock.js","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","timerID","setInterval","tick","clearInterval","setState","console","log","name","props","className","React","Component","App","isClockVisible","toggleVisibility","changeName","prevState","newName","randomize","Math","floor","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,kEAKuB,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,OARN,6CAaIC,cAAcJ,KAAKC,WAbvB,6BAiBID,KAAKK,SAAS,CACZR,MAAO,IAAIC,MAAQC,uBAGrBO,QAAQC,KAAI,IAAIT,MAAOC,wBArB3B,+BAwBY,IACAS,EAASR,KAAKS,MAAdD,KACAX,EAASG,KAAKJ,MAAdC,KAER,OACE,yBAAKa,UAAU,SACb,6CACaF,IAEb,2BACGX,QAlCX,GAA2Bc,IAAMC,YC2DlBC,E,4MAxDbjB,MAAQ,CACNkB,gBAAgB,EAChBN,KAAM,G,EAGRO,iBAAmB,WACjB,EAAKV,UAAS,SAAAT,GAAK,MAAK,CACtBkB,gBAAiBlB,EAAMkB,oB,EAI3BE,WAAa,kBACX,EAAKX,UAAS,SAACY,GACb,IAAMC,EAAU,EAAKC,YAOrB,OAJAb,QAAQC,IAAR,sBACiBU,EAAUT,KAD3B,eACsCU,IAG/B,CACLV,KAAMU,O,EAKZC,UAAY,kBAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,W,uDAExB,IAAD,EAC0BtB,KAAKJ,MAA9BkB,EADD,EACCA,eAAgBN,EADjB,EACiBA,KAExB,OACE,yBAAKE,UAAU,OACZI,EACG,kBAAC,EAAD,CAAON,KAAMA,IACb,8BAEJ,4BACEE,UAAU,cACVa,KAAK,SACLC,QAASxB,KAAKe,kBAEbD,EAAiB,OAAS,QAE7B,4BACEJ,UAAU,cACVa,KAAK,SACLC,QAASxB,KAAKgB,YAHhB,oB,GA7CUL,IAAMC,WCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.25b9282d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      time: (new Date()).toLocaleTimeString(),\n    });\n    //  eslint-disable-next-line no-console\n    console.log(new Date().toLocaleTimeString());\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <h1>\n          {`Clock #${name}`}\n        </h1>\n        <p>\n          {time}\n        </p>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: 0,\n  };\n\n  toggleVisibility = () => {\n    this.setState(state => ({\n      isClockVisible: !state.isClockVisible,\n    }));\n  };\n\n  changeName = () => (\n    this.setState((prevState) => {\n      const newName = this.randomize();\n\n      // eslint-disable-next-line no-console\n      console.log(\n        `Rename from ${prevState.name} to ${newName}`,\n      );\n\n      return {\n        name: newName,\n      };\n    })\n  );\n\n  randomize = () => Math.floor(Math.random() * 100);\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    return (\n      <div className=\"app\">\n        {isClockVisible\n          ? <Clock name={name} />\n          : <div />\n        }\n        <button\n          className=\"app__button\"\n          type=\"button\"\n          onClick={this.toggleVisibility}\n        >\n          {isClockVisible ? 'Hide' : 'Show'}\n        </button>\n        <button\n          className=\"app__button\"\n          type=\"button\"\n          onClick={this.changeName}\n        >\n          Change name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}